#!/bin/bash

# Xilinx project files (.xpr) in the root of project directories often hard code
# the path on the host machine when it should be expanded to use a variable
# instead. This script is intended to be run on a Xilinx project file, usually
# prior to committing to revision control, to restore the path to what it should
# be and to do so in a responsible way.

err () {
    local msg
    msg="${1}"
    printf 'Error: %s\n' "${msg}" >&2
    return 0
}

# Replace the absolute path in a Xilinx .xpr file
replace_path () {
    local xpr_path
    local xpr_filename

    xpr_path="${1}"
    if [[ ! -f "${xpr_path}" ]]; then
        err "No XPR file found"
        return 1
    fi

    # Want to print out what we matched with (Xilinx keeps changing this string
    # too - they added the "Product" attribute by 2024)
    matched_string="$(grep ^\<Project "${xpr_path}")"
    if [[ -n "${matched_string}" ]]; then
        printf 'Matched:  %s\n' "${matched_string}" >&1
    else
        err "No matching project element in ${xpr_path}"
        return 1
    fi

    # shellcheck disable=SC2016
    sed -i '/^<Project /s|\(Path="\).*/\([^/"]*\)"|\1\$PPRDIR/\2"|' "${xpr_path}"

    # Now print out what was matched
    replaced_string="$(grep ^\<Project "${xpr_path}")"
    if [[ -n "${replaced_string}" ]]; then
        printf 'Replaced: %s\n' "${replaced_string}" >&1
    else
        err "No matching project element in ${xpr_path}"
        return 1
    fi

    return 0
}

# Ensure the script is run, not sourced
if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    err "Script must be run as command and not sourced into a running subshell"
  return 1
fi

# Check if at least one filename is provided
if [[ "$#" -lt 1 ]]; then
    printf 'Usage: %s <xpr_file> [xpr_file ...]\n' "$(basename "$0")" >&2
    exit 1
fi

# Replace the absolute path attribute from the project element with a relative
# one and the $PPRDIR tool shell variable
for xpr_file in "${@}"; do
    if [[ -w "${xpr_file}" ]]; then
        if ! replace_path "${xpr_file}"; then
            exit 1
        fi
    else
        err "XPR file not found or not writable by current user: ${xpr_file}"
        exit 1
    fi
done

exit

