#!/bin/bash

# Sleep and wakeup scripts for use with sleepcatcher on Mac OS.  To use, install
# sleepcatcher and blueutil with something like `brew install sleepcatcher` and
# `brew install blueutil`.

PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
PATH="/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}"
export PATH

# Returns the wireless adapter or an empty string if none found
function get_wifi_device () {
    local device

    device="$(networksetup -listallhardwareports | awk '/Wi-Fi/{getline; print $2}')"
    printf '%s' "${device}" >&1
    return 0
}


# Disables the bluetooth interface, if currently enabld. Returns 1 if
# unable to set bluetooth state or blueutil not installed.
function disable_bluetooth () {
    local retval

    if ! command -v blueutil >/dev/null 2>&1; then
        printf '%s\n' "Cannot control bluetooth. Check PATH or install blueutil" >&2
        return 1
    fi

    retval=0
    if [[ "$(blueutil --power)" == 1 ]]; then
        printf '%s' "Disabling bluetooth..."
        if blueutil --power 0; then
            printf 'OK\n'
        else
            printf 'FAIL\n'
            retval=1
        fi
    fi
    return "${retval}"
}

function disable_wifi () {
    local retval
    local device

    device="$(get_wifi_device)"
    if [[ "${device}" == "" ]]; then
        printf '%s\n' "Could not find wifi device" >&2
        return 1
    fi

    retval=0
    if networksetup -getairportpower "${device}" | grep --quiet On; then
        printf '%s' "Disabling wireless adapter ${device}..."
        if networksetup -setairportpower "${device}" Off; then
            printf 'OK\n'
        else
            printf 'FAIL\n'
            retval=1
        fi
    fi
}

disable_bluetooth
disable_wifi

